buildscript {
    repositories {
        mavenCentral()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
        maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }
        jcenter()
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:1.2-SNAPSHOT'
        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.1'
    }
}

apply plugin: 'forge'
apply plugin: 'com.jfrog.bintray'
apply plugin: 'maven-publish'

ext.buildNumber = System.getenv("BUILD_ID") ?: "dev"
version = "1.0.0-$buildNumber"
group= "com.austinv11.collectiveframework" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "CollectiveFramework"

minecraft {
    version = "1.7.10-10.13.2.1291"
    runDir = "eclipse"
    replace("@VERSION@", project.version)
    // the mappings can be changed at any time, and must be in the following format.
    // snapshot_YYYYMMDD   snapshot are built nightly.
    // stable_#            stables are built at the discretion of the MCP team.
    // Use non-default mappings at your own risk. they may not allways work.
    // simply re-run your setup task after changing the mappings to update your workspace.
    //  mappings = "snapshot_nodoc_20150223"
//    mappings = "stable_12"
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact sourceJar
            artifact deobfJar
        }
    }
}

bintray {
    user = 'austinv11'
    key = System.getenv("API_KEY")
    dryRun = false
    publish = true
    publications = ['mavenJava']
    pkg {
        repo = "maven"
        name = "CollectiveFramework"
        desc = "A common library between all of austinv11's creations"
        websiteUrl = "https://github.com/austinv11/CollectiveFramework"
        issueTrackerUrl = "https://github.com/austinv11/CollectiveFramework/issues"
        vcsUrl = "https://github.com/austinv11/CollectiveFramework.git"
        licenses = ["GPL v2"]
        publicDownloadNumbers = true
        version {
            name = project.version
        }
    }
}

dependencies {
    // you may put jars on which you depend on in ./libs
    // or you may define them like so..
    //compile "some.group:artifact:version:classifier"
    //compile "some.group:artifact:version"
      
    // real examples
    //compile 'com.mod-buildcraft:buildcraft:6.0.8:dev'  // adds buildcraft to the dev env
    //compile 'com.googlecode.efficient-java-matrix-library:ejml:0.24' // adds ejml to the dev env

    // for more info...
    // http://www.gradle.org/docs/current/userguide/artifact_dependencies_tutorial.html
    // http://www.gradle.org/docs/current/userguide/dependency_management.html

}

processResources
{
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
                
        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }
        
    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

jar {
    manifest {
        attributes 'FMLAT': 'cf_at.cfg',
                'FMLCorePlugin': 'com.austinv11.collectiveframework.minecraft.asm.CollectiveFrameworkEarlyTransformerPlugin',
                'FMLCorePluginContainsFMLMod': true
    }
}

idea {
    module {
        inheritOutputDirs = true
    }
}

// add source jar
task sourceJar(type: Jar) {
    from sourceSets.main.allSource
    classifier = 'source'
}

// deobf jars
task deobfJar(type: Jar) {
    from sourceSets.main.output
    classifier = 'deobf'
    manifest {
        attributes 'FMLAT': 'cf_at.cfg',
                'FMLCorePlugin': 'com.austinv11.collectiveframework.minecraft.asm.CollectiveFrameworkEarlyTransformerPlugin',
                'FMLCorePluginContainsFMLMod': true
    }
}

build.dependsOn sourceJar, deobfJar
